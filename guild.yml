######################
#     OPERATIONS     #
######################
- config: high-level-flags
  flags:
    method:
      required: yes
      type: string
    experiment-name:
      required: no
      arg-skip: yes  #  don't include as arg, log to guild
      type: string
    fully-observed:
      type: string
      required: no
      # arg-switch: yes  # ref: https://my.guild.ai/t/flag-not-recognized-no-module-named-batch-size/770/7
    feature-map:
      required: no
      type: string 
    percent-missing:
      required: no
      type: float
    amputation-patterns:
      required: no
    replace-nan-with:
      required: no
      type: string
    dataset:
      required: no
      type: string
    bootstrap-evaluate-imputer:
      required: no
      type: string

# what to do when you run `guild run`
- operations:
    main:
      description: Train and evaluate an imputer, run downstream predictions.
      label: ${method} ${experiment-name}
      env: # don't save pycache
        PYTHONDONTWRITEBYTECODE: 1
      sourcecode: no
      output-scalars: off
      requires:
        config: options.yml
      flags:
        $include:
          - high-level-flags
      steps:
        - run: impute method=${method} experiment-name=${experiment-name}  fully-observed=${fully-observed} feature-map=${feature-map} percent-missing=${percent-missing} amputation-patterns=${amputation-patterns} replace-nan-with=${replace-nan-with} dataset=${dataset} bootstrap-evaluate-imputer=${bootstrap-evaluate-imputer}
        - run: evaluate method=${method} experiment-name=${experiment-name} fully-observed=${fully-observed} feature-map=${feature-map} percent-missing=${percent-missing} amputation-patterns=${amputation-patterns} replace-nan-with=${replace-nan-with} dataset=${dataset} bootstrap-evaluate-imputer=${bootstrap-evaluate-imputer}
        - run: predict method=${method} experiment-name=${experiment-name}  fully-observed=${fully-observed} feature-map=${feature-map} percent-missing=${percent-missing} amputation-patterns=${amputation-patterns} replace-nan-with=${replace-nan-with} dataset=${dataset}

    impute:
      description: Train an imputer and run predictions.
      label: ${method} ${experiment-name}
      main: autopopulus/impute
      plugins: summary
      env: # don't save pycache
        PYTHONDONTWRITEBYTECODE: 1
      sourcecode: no
      output-scalars: off
      requires:
        - config: options.yml
      flags:
        $include:
          - high-level-flags
      
    predict:
      description: Run predictions on imputed data.
      label: ${method} ${experiment-name}
      main: autopopulus/predict
      env: # don't save pycache
        PYTHONDONTWRITEBYTECODE: 1
      sourcecode: no
      output-scalars: off
      requires:
        - config: options.yml
        - operation: impute # require files generated by impute
          select: serialized_models
          target-type: link # tells Guild to link ot the resolved files, not copy
      flags:
        $include:
          - high-level-flags

    evaluate:
      description: Evaluate/test an imputer (autoencoders only).
      label: ${method} ${experiment-name}
      main: autopopulus/evaluate
      env: # don't save pycache
        PYTHONDONTWRITEBYTECODE: 1
      sourcecode: no
      output-scalars: off
      requires:
        - config: options.yml
        - operation: impute
          select: serialized_models
          target-type: link # tells Guild to link ot the resolved files, not copy
      flags:
        $include:
          - high-level-flags